
#pragma kernel Initialize
#pragma kernel AddPointWave
#pragma kernel Update

RWTexture2D<float2> waveTexture;

float waveCoef;
float deltaSize;
float deltaTime;
float decayWave;

float positionX;
float positionY;
float planeScaleX;
float planeScaleZ;
float addRange;

[numthreads(8, 8, 1)]
void Initialize(uint3 dispatchThreadID : SV_DispatchThreadID) {
    waveTexture[dispatchThreadID.xy] = float2(0, 0);
}


[numthreads(8, 8, 1)]
void AddPointWave(uint3 dispatchThreadID : SV_DispatchThreadID) {

	float width, height;
	waveTexture.GetDimensions(width, height);

	float dx = (positionX - dispatchThreadID.x / width) * planeScaleX;
	float dy = (positionY - dispatchThreadID.y / height) * planeScaleZ;

	float dist = sqrt(dx*dx + dy*dy);
	
	float addWave = max((addRange - dist), 0) / addRange;
	addWave = pow(addWave, 0.5);

	waveTexture[dispatchThreadID.xy] += float2(addWave, 0);

}

[numthreads(8, 8, 1)]
void Update(uint3 dispatchThreadID : SV_DispatchThreadID) {

    float width, height;
    waveTexture.GetDimensions(width, height);

    float2 wave = waveTexture[dispatchThreadID.xy];
    float a = (deltaTime * deltaTime * waveCoef * waveCoef) / (deltaSize * deltaSize);
    float h = 2.0 * wave.x - wave.y + a * (
        (dispatchThreadID.x != 0 ? waveTexture[dispatchThreadID.xy + uint2(-1, 0)].x : waveTexture[dispatchThreadID.xy].x) +
        (dispatchThreadID.x < width - 1 ? waveTexture[dispatchThreadID.xy + uint2(1, 0)].x : waveTexture[dispatchThreadID.xy].x) +
        (dispatchThreadID.y != 0 ? waveTexture[dispatchThreadID.xy + uint2(0, -1)].x : waveTexture[dispatchThreadID.xy].x) +
        (dispatchThreadID.y < height - 1 ? waveTexture[dispatchThreadID.xy + uint2(0, 1)].x : waveTexture[dispatchThreadID.xy].x) +
        - 4.0 * wave.x) - 0.1 * deltaTime * (wave.x - wave.y);
    
    float damp = - decayWave * deltaTime * (wave.x - wave.y);
    h += damp;
    h *= 0.999;
    
    waveTexture[dispatchThreadID.xy] = float2(h, wave.x);

}